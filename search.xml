<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+GithubPages 部署个人博客</title>
    <url>/yuque/Hexo+GithubPages%20%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="1-缘起"><a href="#1-缘起" class="headerlink" title="1. 缘起"></a>1. 缘起</h2><p>之前还在学校里的时候，在 ACM 集训队中偶尔写过一些题解，发布在 CSDN 的博客上，后来 CSDN 改来改去，以及各种各样的原因，不想在第三方的博客平台发布了，就有了自己搭建一个个人博客站点的想法。一开始设想是购买个服务器自己搭 Wordpress 的，后来看了几篇文章以后发现 Github Pages 之类的静态页面就可以满足我基本的需求了，使用 hexo 之类的静态站点生成工具也可以很方便的以后迁移到自己的服务器上。<br>所以最后的方案就确定是 Hexo + Github Pages 了</p>
<h2 id="2-准备"><a href="#2-准备" class="headerlink" title="2. 准备"></a>2. 准备</h2><h3 id="2-1-Hexo-的准备"><a href="#2-1-Hexo-的准备" class="headerlink" title="2.1 Hexo 的准备"></a>2.1 Hexo 的准备</h3><blockquote>
<p>“快速、简洁且高效的博客框架” – hexo.io</p>
</blockquote>
<p><a href="https://hexo.io/">Hexo </a> 是基于 Node.js 的 一个快速高效的博客框架，支持从 markdown 生成页面，同时有丰富的第三方插件和主题支持。</p>
<h4 id="2-2-1-依赖安装"><a href="#2-2-1-依赖安装" class="headerlink" title="2.2.1 依赖安装"></a>2.2.1 依赖安装</h4><p>前置要求 <code>Git</code> 、 <code>NodeJs</code> <br>这两个的安装就不在这里多做赘述了，直接参考官网或者其他博客即可。<br><a href="https://nodejs.org/zh-cn/">NodeJs 官网</a><br><a href="https://git-scm.com/">Git 官网</a></p>
<h4 id="2-1-2-Hexo-安装"><a href="#2-1-2-Hexo-安装" class="headerlink" title="2.1.2 Hexo 安装"></a>2.1.2 Hexo 安装</h4><p>安装完上述依赖以后，直接执行下面的命令即可安装 Hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h4 id="2-1-3-初始化站点"><a href="#2-1-3-初始化站点" class="headerlink" title="2.1.3 初始化站点"></a>2.1.3 初始化站点</h4><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<p>需要关心以下几个文件/文件夹</p>
<h5 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h5><p>网站的配置信息，在此配置大部分的参数。</p>
<h5 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h5><p>模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。<br>Hexo 的模板是指在新建的文章文件中默认填充的内容。例如，如果修改 scaffold/post.md 中的 Front-matter 内容，那么每次新建一篇文章时都会包含这个修改。</p>
<h5 id="source"><a href="#source" class="headerlink" title="source"></a>source</h5><p>资源文件夹是存放用户资源的地方。除 <code>_post</code>  文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code>  文件夹，而其他文件会被拷贝过去。</p>
<h5 id="theme"><a href="#theme" class="headerlink" title="theme"></a>theme</h5><p>主题文件夹。Hexo 会根据主题来生成静态页面。</p>
<p>现在，在文件夹下执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s  <span class="comment">#s 是server的缩写</span></span><br></pre></td></tr></table></figure>

<p>然后打开 <a href="http://localhost:4000/">http://localhost:4000</a> 应该可以看到默认的站点页面了 如下图<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1426563/1608199841746-5a2cdc67-550d-4d0c-a916-8b85f5f50b60.png#align=left&display=inline&height=594&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1188&originWidth=3338&size=190015&status=done&style=none&width=1669" alt="image.png"><br>我这个是使用了 next 的主题，默认和这个会有所不同，只要能正常看到页面，就算正常。</p>
<p>至此 一个 Hexo 的本地站点就已经搭建完成了，接下来就是要配置 Github Pages / 其他静态页面容器用于部署博客了</p>
<h4 id="2-1-4-站点基本信息配置"><a href="#2-1-4-站点基本信息配置" class="headerlink" title="2.1.4 站点基本信息配置"></a>2.1.4 站点基本信息配置</h4><p>站点基本信息配置，在站点的 <code>_config.yml</code>  中修改基本信息</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Shufu&#x27;s</span> <span class="string">Graffiti</span>  <span class="comment">#站点名称</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span>  <span class="comment"># 子标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;Recoding &amp; Reminding&#x27;</span> <span class="comment"># 描述</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">***</span> <span class="comment">#作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span> <span class="comment">#语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span> <span class="string">时区</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-2-Github-Pages-的准备"><a href="#2-2-Github-Pages-的准备" class="headerlink" title="2.2 Github Pages 的准备"></a>2.2 Github Pages 的准备</h3><p>这里以 Github Pages 为例，但是使用 Coding 或者 Gitee 的类似服务也是类似的流程</p>
<h4 id="2-2-1-注册账号"><a href="#2-2-1-注册账号" class="headerlink" title="2.2.1 注册账号"></a>2.2.1 注册账号</h4><p>注册一个 github 账号，过程略</p>
<h4 id="2-2-2-创建一个博客仓库"><a href="#2-2-2-创建一个博客仓库" class="headerlink" title="2.2.2 创建一个博客仓库"></a>2.2.2 创建一个博客仓库</h4><p>新建仓库<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1426563/1608200162028-af2bd55e-5f33-4abb-8d6b-5ebab826c1d9.png#align=left&display=inline&height=270&margin=%5Bobject%20Object%5D&name=image.png&originHeight=540&originWidth=666&size=53059&status=done&style=none&width=333" alt="image.png"><br>如果要想直接用 <code>&lt;用户名&gt;.github.io</code>  访问的话，仓库名就要是 <code>&lt;用户名&gt;.github.io</code>  但是考虑到未来可能会迁移到个人服务器上，所以我自己还是用子目录的形式访问的 即随意填写仓库名 使用 <code>&lt;用户名&gt;.github.io/仓库名的形式访问</code> 如下图<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1426563/1608200426362-1f2be310-89ff-47bc-b64e-0c03361b115f.png#align=left&display=inline&height=807&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1614&originWidth=1878&size=232761&status=done&style=none&width=939" alt="image.png"></p>
<h4 id="2-2-3-启用-Github-Pages-服务"><a href="#2-2-3-启用-Github-Pages-服务" class="headerlink" title="2.2.3 启用 Github Pages 服务"></a>2.2.3 启用 Github Pages 服务</h4><p>创建完成以后 进入项目的 Setting -&gt; GitHub Pages 启用 Pages 分支选 main，目录选 root 即可。<br>在项目中创建一个 <code>index.html</code>  内容填写</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello,world<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>保存提交后，再直接通过 GitHub Pages 处显示的地址打开，就应该能看到 Hello World 了</p>
<p>至此 Github Pages 的准备也已经完成了，接下来就是将本地生成的静态站点推送到这个容器仓库中了。</p>
<h2 id="3-部署"><a href="#3-部署" class="headerlink" title="3. 部署"></a>3. 部署</h2><p>这边先介绍直接使用插件将本地生成的站点整体推送到远端的方案，后续直接使用语雀作为编辑端，通过 Web Hook 触发自动的同步和打包动作，完成发布的相关的内容下一篇再写吧</p>
<h3 id="3-1-部署插件的安装"><a href="#3-1-部署插件的安装" class="headerlink" title="3.1. 部署插件的安装"></a>3.1. 部署插件的安装</h3><p><a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a> 是一个一键将 Hexo 生成的站点部署到 Github 的插件 安装命令如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>然后在 <code>_config.yml</code>  中配置 git 仓库的相关信息</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:******</span> <span class="comment"># 仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<h3 id="3-2-SSH-key-配置"><a href="#3-2-SSH-key-配置" class="headerlink" title="3.2. SSH key 配置"></a>3.2. SSH key 配置</h3><p>本地生成一对 SSH key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;备注&quot;</span></span><br></pre></td></tr></table></figure>

<p>然后将公钥放到 个人页面-&gt; Setting -&gt; SSH and GPG keys 中</p>
<h3 id="3-3-Hexo-配置修改"><a href="#3-3-Hexo-配置修改" class="headerlink" title="3.3. Hexo 配置修改"></a>3.3. Hexo 配置修改</h3><p><code>_config.yml</code>  中</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://tofunothere.github.io/blog</span> <span class="comment"># 修改为github pages 的地址，</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span> <span class="comment"># 如果是使用子目录的形式，需要指定子目录</span></span><br></pre></td></tr></table></figure>

<h3 id="3-4-发布"><a href="#3-4-发布" class="headerlink" title="3.4. 发布"></a>3.4. 发布</h3><p>在博客目录下执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g -d <span class="comment"># g 是generate的缩写 d 是deploy的缩写</span></span><br></pre></td></tr></table></figure>

<p>好了，现在就已经将本地静态站点发布到 GitHub 上了，通过 GitHub Pages 的链接应该可以正常访问了</p>
<h2 id="4-主题配置"><a href="#4-主题配置" class="headerlink" title="4. 主题配置"></a>4. 主题配置</h2><h3 id="4-1-Next-的安装"><a href="#4-1-Next-的安装" class="headerlink" title="4.1 Next 的安装"></a>4.1 Next 的安装</h3><p>可以直接通过 <code>git</code>  将目录 <code>clone</code>  到 <code>theme/next</code>  文件夹下，命令如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo站点目录</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>也可以下载 zip 包，然后解压文件到 theme 文件夹下，注意要将文件夹名改为 next<br>在站点的 <code>_config.yml</code>  配置中，修改 theme: 为 next 即可启用 next 主题</p>
<h3 id="4-2-相关插件安装及配置"><a href="#4-2-相关插件安装及配置" class="headerlink" title="4.2 相关插件安装及配置"></a>4.2 相关插件安装及配置</h3><h4 id="4-2-1-配置主题"><a href="#4-2-1-配置主题" class="headerlink" title="4.2.1.配置主题"></a>4.2.1.配置主题</h4><p>修改主题，配置侧片菜单，详情页中的导航目录</p>
<h5 id="主题-Scheme"><a href="#主题-Scheme" class="headerlink" title="主题 Scheme"></a>主题 Scheme</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment"># scheme: Muse</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h5 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  <span class="comment"># position: left</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  <span class="comment">#width: 300</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically.</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar padding in pixels.</span></span><br><span class="line">  <span class="attr">padding:</span> <span class="number">18</span></span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  <span class="attr">offset:</span> <span class="number">12</span></span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h5 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h5 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Table of Contents in the Sidebar</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport wrap expand_all).</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>

<h4 id="4-2-2-配置菜单"><a href="#4-2-2-配置菜单" class="headerlink" title="4.2.2.配置菜单"></a>4.2.2.配置菜单</h4><p>主题的 <code>_config.yml </code>  配置中修改下面的内容<br>依次为主页、分类、标签、归档、关于页面</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br></pre></td></tr></table></figure>

<p>但是仅仅取消相关页面的注释是不够的，需要创建对应的页面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br><span class="line">hexo new page archives</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>

<p>然后进入 source 目录下，找到对应的文件夹，修改其中的 <code>index.md</code>  内容如下</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于</span><br><span class="line">date: 2020-12-15 19:26:17</span><br><span class="line">type: &quot;about&quot; #type对应上面的目录类型</span><br><span class="line">comments: false # 关闭评论</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h4 id="4-2-3-配置搜索"><a href="#4-2-3-配置搜索" class="headerlink" title="4.2.3.配置搜索"></a>4.2.3.配置搜索</h4><p>安装本地搜索插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>编辑 Hexo 的 <code>_config.yml</code>  添加如下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>修改 Next 的 <code>_config.yml</code>  启用搜索</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="4-2-4-配置字数统计和阅读时长估计"><a href="#4-2-4-配置字数统计和阅读时长估计" class="headerlink" title="4.2.4 配置字数统计和阅读时长估计"></a>4.2.4 配置字数统计和阅读时长估计</h4><p>修改 Next 的 <code>_config.yml</code>  启用字数统计和阅读时长估计</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">mins.</span></span><br></pre></td></tr></table></figure>

<p>修改 Hexo 的 <code>_config.yml</code>  启用全站的字数统计和时长估计</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="4-2-5-配置访问统计"><a href="#4-2-5-配置访问统计" class="headerlink" title="4.2.5 配置访问统计"></a>4.2.5 配置访问统计</h4><p>修改 Next 的 <code>_config.yml</code>  启用访问统计</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>语雀+GithubActions实现Hexo站点自动化发布</title>
    <url>/yuque/%E8%AF%AD%E9%9B%80+GithubActions%E5%AE%9E%E7%8E%B0Hexo%E7%AB%99%E7%82%B9%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8F%91%E5%B8%83/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>2-SAT问题</title>
    <url>/old/2-SAT%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="【2-SAT问题】"><a href="#【2-SAT问题】" class="headerlink" title="【2-SAT问题】"></a>【2-SAT问题】</h2><hr>
<p>现有一个由N个布尔值组成的序列A，给出一些限制关系，比如A[x] AND A[y]=0、A[x] OR A[y] OR A[z]=1等，要确定A[0..N-1]的值，使得其满足所有限制关系。这个称为SAT问题，特别的，若每种限制关系中最多只对两个元素进行限制，则称为2-SAT问题。</p>
<hr>
<p>由于在2-SAT问题中，最多只对两个元素进行限制，所以可能的限制关系共有11种：</p>
<blockquote>
<p>A[x]<br>NOT A[x]<br>A[x] AND A[y]<br>A[x] AND NOT A[y]<br>A[x] OR A[y]<br>A[x] OR NOT A[y]<br>NOT (A[x] AND A[y])<br>NOT (A[x] OR A[y])<br>A[x] XOR A[y]<br>NOT (A[x] XOR A[y])<br>A[x] XOR NOT A[y]</p>
</blockquote>
<p>进一步，A[x] AND A[y]相当于(A[x]) AND (A[y])（也就是可以拆分成A[x]与A[y]两个限制关系），NOT(A[x] OR A[y])相当于NOT A[x] AND NOT A[y]（也就是可以拆分成NOT A[x]与NOT A[y]两个限制关系）。因此，可能的限制关系最多只有9种。</p>
<p>在实际问题中，2-SAT问题在大多数时候表现成以下形式：有N对物品，每对物品中必须选取一个，也只能选取一个，并且它们之间存在某些限制关系（如某两个物品不能都选，某两个物品不能都不选，某两个物品必须且只能选一个，某个物品必选）等，这时，可以将每对物品当成一个布尔值（选取第一个物品相当于0，选取第二个相当于1），如果所有的限制关系最多只对两个物品进行限制，则它们都可以转化成9种基本限制关系，从而转化为2-SAT模型。</p>
<h3 id="【建模】"><a href="#【建模】" class="headerlink" title="【建模】"></a>【建模】</h3><p>其实2-SAT问题的建模是和实际问题非常相似的。<br>建立一个2N阶的有向图，其中的点分为N对，每对点表示布尔序列A的一个元素的0、1取值（以下将代表A[i]的0取值的点称为i，代表A[i]的1取值的点称为i’）。显然每对点必须且只能选取一个。然后，图中的边具有特定含义。若图中存在边&lt;i, j&gt;，则表示若选了i必须选j。可以发现，上面的9种限制关系中，后7种二元限制关系都可以用连边实现，比如NOT(A[x] AND A[y])需要连两条边&lt;x, y’&gt;和&lt;y, x’&gt;，A[x] OR A[y]需要连两条边&lt;x’, y&gt;和&lt;y’, x&gt;。而前两种一元关系，对于A[x]（即x必选），可以通过连边&lt;x’, x&gt;来实现，而NOT A[x]（即x不能选），可以通过连边&lt;x, x’&gt;来实现。</p>
<hr>
<h3 id="【O-NM-算法：求字典序最小的解】"><a href="#【O-NM-算法：求字典序最小的解】" class="headerlink" title="【O(NM)算法：求字典序最小的解】"></a>【O(NM)算法：求字典序最小的解】</h3><p>根据2-SAT建成的图中边的定义可以发现，若图中i到j有路径，则若i选，则j也要选；或者说，若j不选，则i也不能选；<br>因此得到一个很直观的算法：</p>
<blockquote>
<p>（1）给每个点设置一个状态V，V=0表示未确定，V=1表示确定选取，V=2表示确定不选取。称一个点是已确定的当且仅当其V值非0。设立两个队列Q1和Q2，分别存放本次尝试选取的点的编号和尝试不选的点的编号。<br>（2）若图中所有的点均已确定，则找到一组解，结束，否则，将Q1、Q2清空，并任选一个未确定的点i，将i加入队列Q1，将i’加入队列Q2；<br>（3）找到i的所有后继。对于后继j，若j未确定，则将j加入队列Q1；若j’（这里的j’是指与j在同一对的另一个点）未确定，则将j’加入队列Q2；<br>（4）遍历Q2中的每个点，找到该点的所有前趋（这里需要先建一个补图），若该前趋未确定，则将其加入队列Q2；<br>（5）在（3）（4）步操作中，出现以下情况之一，则本次尝试失败，否则本次尝试成功：</p>
<blockquote>
<p>&lt;1&gt;某个已被加入队列Q1的点被加入队列Q2；<br>&lt;2&gt;某个已被加入队列Q2的点被加入队列Q1;<br>&lt;3&gt;某个j的状态为2；<br>&lt;4&gt;某个i’或j’的状态为1或某个i’或j’的前趋的状态为1；</p>
</blockquote>
</blockquote>
<blockquote>
<p>（6）若本次尝试成功，则将Q1中的所有点的状态改为1，将Q2中所有点的状态改为2，转（2），否则尝试点i’，若仍失败则问题无解。<br>该算法的时间复杂度为O(NM)（最坏情况下要尝试所有的点，每次尝试要遍历所有的边），但是在多数情况下，远远达不到这个上界。<br>具体实现时，可以用一个数组vst来表示队列Q1和Q2。设立两个标志变量i1和i2（要求对于不同的i，i1和i2均不同，这样可以避免每次尝试都要初始化一次，节省时间），若vst[i]=i1则表示i已被加入Q1，若vst[i]=i2则表示i已被加入Q2。不过Q1和Q2仍然是要设立的，因为遍历（BFS）的时候需要队列，为了防止重复遍历，加入Q1（或Q2）中的点的vst值必然不等于i1（或i2）。中间一旦发生矛盾，立即中止尝试，宣告失败。</p>
</blockquote>
<p>该算法虽然在多数情况下时间复杂度到不了O(NM)，但是综合性能仍然不如下面的O(M)算法。不过，该算法有一个很重要的用处：求字典序最小的解！<br>如果原图中的同一对点编号都是连续的（01、23、45……）则可以依次尝试第0对、第1对……点，每对点中先尝试编号小的，若失败再尝试编号大的。这样一定能求出字典序最小的解（如果有解的话），因为一个点一旦被确定，则不可更改。<br>如果原图中的同一对点编号不连续（比如03、25、14……）则按照该对点中编号小的点的编号递增顺序将每对点排序，然后依次扫描排序后的每对点，先尝试其编号小的点，若成功则将这个点选上，否则尝试编号大的点，若成功则选上，否则（都失败）无解。</p>
<hr>
<h4 id="【具体题目】HDU1814（求字典序最小的解）"><a href="#【具体题目】HDU1814（求字典序最小的解）" class="headerlink" title="【具体题目】HDU1814（求字典序最小的解）"></a>【具体题目】HDU1814（求字典序最小的解）</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">HDU <span class="number">1814</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">HDU 1814</span></span><br><span class="line"><span class="comment">求出字典序最小的解</span></span><br><span class="line"><span class="comment">C++ 2652ms 2316K</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">16010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">100000</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,b,pre,next;</span><br><span class="line">&#125;E[MAXM],E2[MAXM];</span><br><span class="line"><span class="keyword">int</span> _n,n,m;</span><br><span class="line"><span class="keyword">int</span> V[MAXN],ST[MAXN][<span class="number">2</span>],Q[MAXN],Q2[MAXN],vst[MAXN];</span><br><span class="line"><span class="keyword">bool</span> res_ex;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_d</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">      E[i].a=E[i].pre=E[i].next=E2[i].a=E2[i].pre=E2[i].next=i;</span><br><span class="line">    m=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_edge</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    E[m].a=a;E[m].b=b;E[m].pre=E[a].pre;E[m].next=a;E[a].pre=m;E[E[m].pre].next=m;</span><br><span class="line">    E2[m].a=b;E2[m].b=a;E2[m].pre=E2[b].pre;E2[m].next=b;E2[b].pre=m;E2[E2[m].pre].next=m;</span><br><span class="line">    m++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        V[i]=<span class="number">0</span>;</span><br><span class="line">        vst[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res_ex=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i,i1,i2,j,k,front,rear,front2,rear2;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">bool</span> ff;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> _i=<span class="number">0</span>;_i&lt;_n;_i++)</span><br><span class="line">    &#123;<span class="comment">//2</span></span><br><span class="line">        <span class="keyword">if</span>(V[_i&lt;&lt;<span class="number">1</span>]==<span class="number">1</span>||V[(_i&lt;&lt;<span class="number">1</span>)+<span class="number">1</span>]==<span class="number">1</span>)<span class="keyword">continue</span>;<span class="comment">//找一对未确定的点</span></span><br><span class="line">        i=_i&lt;&lt;<span class="number">1</span>;len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(!V[i])</span><br><span class="line">        &#123;<span class="comment">//3</span></span><br><span class="line">            ST[len][<span class="number">0</span>]=i;</span><br><span class="line">            ST[len++][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!V[i^<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                ST[len][<span class="number">0</span>]=i^<span class="number">1</span>;</span><br><span class="line">                ST[len++][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Q[front=rear=<span class="number">0</span>]=i;</span><br><span class="line">            vst[i]=i1=n+i;</span><br><span class="line">            Q2[front2=rear2=<span class="number">0</span>]=i^<span class="number">1</span>;</span><br><span class="line">            vst[i^<span class="number">1</span>]=i2=(n&lt;&lt;<span class="number">1</span>)+i;</span><br><span class="line">            ff=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(;front&lt;=rear;front++)</span><br><span class="line">            &#123;<span class="comment">//4</span></span><br><span class="line">                j=Q[front];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> p=E[j].next;p!=j;p=E[p].next)</span><br><span class="line">                &#123;<span class="comment">//5</span></span><br><span class="line">                    k=E[p].b;</span><br><span class="line">                    <span class="keyword">if</span>(V[k]==<span class="number">2</span>||vst[k]==i2||V[k^<span class="number">1</span>]==<span class="number">1</span>||vst[k^<span class="number">1</span>]==i1)</span><br><span class="line">                    &#123;ff=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">                    <span class="keyword">if</span>(vst[k]!=i1)</span><br><span class="line">                    &#123;<span class="comment">//6</span></span><br><span class="line">                        Q[++rear]=k;vst[k]=i1;</span><br><span class="line">                        <span class="keyword">if</span>(!V[k])</span><br><span class="line">                        &#123;</span><br><span class="line">                            ST[len][<span class="number">0</span>]=k;</span><br><span class="line">                            ST[len++][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="comment">//6</span></span><br><span class="line">                    <span class="keyword">if</span>(vst[k^<span class="number">1</span>]!=i2)</span><br><span class="line">                    &#123;<span class="comment">//6</span></span><br><span class="line">                        Q2[++rear2]=k^<span class="number">1</span>;vst[k^<span class="number">1</span>]=i2;</span><br><span class="line">                        <span class="keyword">if</span>(!V[k])</span><br><span class="line">                        &#123;</span><br><span class="line">                            ST[len][<span class="number">0</span>]=k^<span class="number">1</span>;</span><br><span class="line">                            ST[len++][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="comment">//6</span></span><br><span class="line">                &#125;<span class="comment">//5</span></span><br><span class="line">                <span class="keyword">if</span>(!ff)<span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="comment">//4</span></span><br><span class="line">            <span class="keyword">if</span>(ff)</span><br><span class="line">            &#123;<span class="comment">//4</span></span><br><span class="line">                <span class="keyword">for</span>(;front2&lt;=rear2;front2++)</span><br><span class="line">                &#123;<span class="comment">//5</span></span><br><span class="line">                    j=Q2[front2];</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> p=E2[j].next;p!=j;p=E2[p].next)</span><br><span class="line">                    &#123;<span class="comment">//6</span></span><br><span class="line">                        k=E2[p].b;</span><br><span class="line">                        <span class="keyword">if</span>(V[k]==<span class="number">1</span>||vst[k]==i1)</span><br><span class="line">                        &#123;ff=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">                        <span class="keyword">if</span>(vst[k]!=i2)</span><br><span class="line">                        &#123;</span><br><span class="line">                            vst[k]=i2;Q2[++rear]=k;</span><br><span class="line">                            <span class="keyword">if</span>(!V[k])</span><br><span class="line">                            &#123;</span><br><span class="line">                                ST[len][<span class="number">0</span>]=k;</span><br><span class="line">                                ST[len++][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="comment">//6</span></span><br><span class="line">                    <span class="keyword">if</span>(!ff)<span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="comment">//5</span></span><br><span class="line">                <span class="keyword">if</span>(ff)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)V[ST[j][<span class="number">0</span>]]=ST[j][<span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="comment">//4</span></span><br><span class="line">        &#125;<span class="comment">//3</span></span><br><span class="line">        i=(_i&lt;&lt;<span class="number">1</span>)+<span class="number">1</span>;len=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//********************************************</span></span><br><span class="line"><span class="comment">//下面这段和上面完全一样的，可以复制。但是要保证上面写对</span></span><br><span class="line"><span class="comment">//********************************************</span></span><br><span class="line">        <span class="keyword">if</span>(!V[i])</span><br><span class="line">        &#123;<span class="comment">//3</span></span><br><span class="line">            ST[len][<span class="number">0</span>]=i;</span><br><span class="line">            ST[len++][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!V[i^<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                ST[len][<span class="number">0</span>]=i^<span class="number">1</span>;</span><br><span class="line">                ST[len++][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Q[front=rear=<span class="number">0</span>]=i;</span><br><span class="line">            vst[i]=i1=n+i;</span><br><span class="line">            Q2[front2=rear2=<span class="number">0</span>]=i^<span class="number">1</span>;</span><br><span class="line">            vst[i^<span class="number">1</span>]=i2=(n&lt;&lt;<span class="number">1</span>)+i;</span><br><span class="line">            ff=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(;front&lt;=rear;front++)</span><br><span class="line">            &#123;<span class="comment">//4</span></span><br><span class="line">                j=Q[front];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> p=E[j].next;p!=j;p=E[p].next)</span><br><span class="line">                &#123;<span class="comment">//5</span></span><br><span class="line">                    k=E[p].b;</span><br><span class="line">                    <span class="keyword">if</span>(V[k]==<span class="number">2</span>||vst[k]==i2||V[k^<span class="number">1</span>]==<span class="number">1</span>||vst[k^<span class="number">1</span>]==i1)</span><br><span class="line">                    &#123;ff=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">                    <span class="keyword">if</span>(vst[k]!=i1)</span><br><span class="line">                    &#123;<span class="comment">//6</span></span><br><span class="line">                        Q[++rear]=k;vst[k]=i1;</span><br><span class="line">                        <span class="keyword">if</span>(!V[k])</span><br><span class="line">                        &#123;</span><br><span class="line">                            ST[len][<span class="number">0</span>]=k;</span><br><span class="line">                            ST[len++][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="comment">//6</span></span><br><span class="line">                    <span class="keyword">if</span>(vst[k^<span class="number">1</span>]!=i2)</span><br><span class="line">                    &#123;<span class="comment">//6</span></span><br><span class="line">                        Q2[++rear2]=k^<span class="number">1</span>;vst[k^<span class="number">1</span>]=i2;</span><br><span class="line">                        <span class="keyword">if</span>(!V[k])</span><br><span class="line">                        &#123;</span><br><span class="line">                            ST[len][<span class="number">0</span>]=k^<span class="number">1</span>;</span><br><span class="line">                            ST[len++][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="comment">//6</span></span><br><span class="line">                &#125;<span class="comment">//5</span></span><br><span class="line">                <span class="keyword">if</span>(!ff)<span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="comment">//4</span></span><br><span class="line">            <span class="keyword">if</span>(ff)</span><br><span class="line">            &#123;<span class="comment">//4</span></span><br><span class="line">                <span class="keyword">for</span>(;front2&lt;=rear2;front2++)</span><br><span class="line">                &#123;<span class="comment">//5</span></span><br><span class="line">                    j=Q2[front2];</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> p=E2[j].next;p!=j;p=E2[p].next)</span><br><span class="line">                    &#123;<span class="comment">//6</span></span><br><span class="line">                        k=E2[p].b;</span><br><span class="line">                        <span class="keyword">if</span>(V[k]==<span class="number">1</span>||vst[k]==i1)</span><br><span class="line">                        &#123;ff=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">                        <span class="keyword">if</span>(vst[k]!=i2)</span><br><span class="line">                        &#123;</span><br><span class="line">                            vst[k]=i2;Q2[++rear]=k;</span><br><span class="line">                            <span class="keyword">if</span>(!V[k])</span><br><span class="line">                            &#123;</span><br><span class="line">                                ST[len][<span class="number">0</span>]=k;</span><br><span class="line">                                ST[len++][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="comment">//6</span></span><br><span class="line">                    <span class="keyword">if</span>(!ff)<span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="comment">//5</span></span><br><span class="line">                <span class="keyword">if</span>(ff)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)V[ST[j][<span class="number">0</span>]]=ST[j][<span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="comment">//4</span></span><br><span class="line">        &#125;<span class="comment">//3</span></span><br><span class="line"><span class="comment">//**************************************************************</span></span><br><span class="line">        <span class="keyword">if</span>(V[_i&lt;&lt;<span class="number">1</span>]+V[(_i&lt;&lt;<span class="number">1</span>)+<span class="number">1</span>]!=<span class="number">3</span>)&#123;res_ex=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">    &#125;<span class="comment">//2</span></span><br><span class="line">&#125;<span class="comment">//1</span></span><br><span class="line"><span class="comment">//点的编号必须从0开始，2*i和2*i+1是一对sat</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> M;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;_n,&amp;M)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        n=_n&lt;&lt;<span class="number">1</span>;</span><br><span class="line">        init_d();</span><br><span class="line">        <span class="keyword">while</span>(M--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">            x--;</span><br><span class="line">            y--;</span><br><span class="line">            <span class="keyword">if</span>(x!=(y^<span class="number">1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                add_edge(x,y^<span class="number">1</span>);</span><br><span class="line">                add_edge(y,x^<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        solve();</span><br><span class="line">        <span class="keyword">if</span>(res_ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="comment">//V为0为不确定，1为确定选择，2为确定不选择</span></span><br><span class="line">            <span class="keyword">if</span>(V[i]==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;NIE\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="【O-M-算法】"><a href="#【O-M-算法】" class="headerlink" title="【O(M)算法】"></a>【O(M)算法】</h3><p>根据图的对称性，可以将图中所有的强连通分支全部缩成一个点（因为强连通分支中的点要么都选，要么都不选），然后按照拓扑逆序（每次找出度为0的点，具体实现时，在建分支邻接图时将所有边取反）遍历分支邻接图，将这个点（表示的连通分支）选上，并将其所有对立点（注意，连通分支的对立连通分支可能有多个，若对于两个连通分支S1和S2，点i在S1中，点i’在S2中，则S1和S2对立）及这些对立点的前趋全部标记为不选，直到所有点均标记为止。这一过程中必然不会出现矛盾（详细证明过程省略，论文里有）。<br>无解判定：若求出所有强分支后，存在点i和i’处于同一个分支，则无解，否则必定有解。<br>时间复杂度：求强分支时间复杂度为O(M)，拓扑排序的时间复杂度O(M)，总时间复杂度为O(M)。</p>
<p>该算法的时间复杂度低，但是只能求出任意一组解，不能保证求出解的字典序最小。当然，如果原题不需要求出具体的解，只需要判定是否有解（有的题是二分 + 2-SAT判有解的），当然应该采用这种算法，只要求强连通分支（Kosaraju、Tarjan均可，推荐后者）即可。</p>
<hr>
<h4 id="【具体题目】PKU3648（本题的特殊情况非常多，具体见Discuss）"><a href="#【具体题目】PKU3648（本题的特殊情况非常多，具体见Discuss）" class="headerlink" title="【具体题目】PKU3648（本题的特殊情况非常多，具体见Discuss）"></a>【具体题目】PKU3648（本题的特殊情况非常多，具体见Discuss）</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">POJ <span class="number">3648</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">POJ 3648</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">【题意】：有一对新人结婚，邀请n对夫妇去参加婚礼。</span></span><br><span class="line"><span class="comment">有一张很长的桌子，人只能坐在桌子的两边，还要满</span></span><br><span class="line"><span class="comment">足下面的要求：1.每对夫妇不能坐在同一侧 2.n对夫妇</span></span><br><span class="line"><span class="comment">之中可能有通奸关系（包括男男，男女，女女），有通</span></span><br><span class="line"><span class="comment">奸关系的不能同时坐在新娘的对面，可以分开坐，可以</span></span><br><span class="line"><span class="comment">同时坐在新娘这一侧。如果存在一种可行的方案，输出</span></span><br><span class="line"><span class="comment">与新娘同侧的人。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">输出任意一组解，点的编号从0~2n-1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">G++ 16ms  724K</span></span><br><span class="line"><span class="comment">取和新郎同一侧的，输出的时候反一下就变成和新娘同一侧的了</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">200</span>;<span class="comment">//</span></span><br><span class="line"><span class="keyword">char</span> color[MAXN];<span class="comment">//染色</span></span><br><span class="line"><span class="keyword">bool</span> visit[MAXN];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q1,q2;</span><br><span class="line"><span class="comment">//vector建图方法很妙</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;adj; <span class="comment">//原图    //中间一定要加空格把两个&#x27;&gt;&#x27;隔开</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;radj;<span class="comment">//逆图</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;dag;<span class="comment">//缩点后的逆向DAG图</span></span><br><span class="line"><span class="keyword">int</span> n,m,cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id[MAXN],order[MAXN],ind[MAXN];<span class="comment">//强连通分量，访问顺序，入度</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    visit[u]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> i,len=adj[u].size();</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">      <span class="keyword">if</span>(!visit[adj[u][i]])</span><br><span class="line">        dfs(adj[u][i]);</span><br><span class="line">    order[cnt++]=u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rdfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    visit[u]=<span class="literal">true</span>;</span><br><span class="line">    id[u]=cnt;</span><br><span class="line">    <span class="keyword">int</span> i,len=radj[u].size();</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">      <span class="keyword">if</span>(!visit[radj[u][i]])</span><br><span class="line">        rdfs(radj[u][i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">korasaju</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">memset</span>(visit,<span class="literal">false</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">    <span class="keyword">for</span>(cnt=<span class="number">0</span>,i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)</span><br><span class="line">      <span class="keyword">if</span>(!visit[i])</span><br><span class="line">        dfs(i);</span><br><span class="line">    <span class="built_in">memset</span>(id,<span class="number">0</span>,<span class="keyword">sizeof</span>(id));</span><br><span class="line">    <span class="built_in">memset</span>(visit,<span class="literal">false</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">    <span class="keyword">for</span>(cnt=<span class="number">0</span>,i=<span class="number">2</span>*n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      <span class="keyword">if</span>(!visit[order[i]])</span><br><span class="line">      &#123;</span><br><span class="line">          cnt++;<span class="comment">//这个一定要放前面来</span></span><br><span class="line">          rdfs(order[i]);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solvable</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">      <span class="keyword">if</span>(id[<span class="number">2</span>*i]==id[<span class="number">2</span>*i+<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">topsort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,len,now,p,pid;</span><br><span class="line">    <span class="keyword">while</span>(!q1.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        now=q1.front();</span><br><span class="line">        q1.pop();</span><br><span class="line">        <span class="keyword">if</span>(color[now]!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">        color[now]=<span class="string">&#x27;R&#x27;</span>;</span><br><span class="line">        ind[now]=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(id[i]==now)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//p=(i%2)?i+1:i-1;//点的编号从0开始以后这一定要修改</span></span><br><span class="line">                p=i^<span class="number">1</span>;</span><br><span class="line">                pid=id[p];</span><br><span class="line">                q2.push(pid);</span><br><span class="line">                <span class="keyword">while</span>(!q2.empty())</span><br><span class="line">                &#123;</span><br><span class="line">                    pid=q2.front();</span><br><span class="line">                    q2.pop();</span><br><span class="line">                    <span class="keyword">if</span>(color[pid]==<span class="string">&#x27;B&#x27;</span>)<span class="keyword">continue</span>;</span><br><span class="line">                    color[pid]=<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                    len=dag[pid].size();</span><br><span class="line">                    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;len;j++)</span><br><span class="line">                        q2.push(dag[pid][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        len=dag[now].size();</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ind[dag[now][i]]--;</span><br><span class="line">            <span class="keyword">if</span>(ind[dag[now][i]]==<span class="number">0</span>)</span><br><span class="line">              q1.push(dag[now][i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">char</span> c1,c2;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        adj.assign(<span class="number">2</span>*n,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">        radj.assign(<span class="number">2</span>*n,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%c%d%c&quot;</span>,&amp;x,&amp;c1,&amp;y,&amp;c2);</span><br><span class="line">            <span class="keyword">if</span>(c1==<span class="string">&#x27;w&#x27;</span>)x=<span class="number">2</span>*x;</span><br><span class="line">            <span class="keyword">else</span> x=<span class="number">2</span>*x+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(c2==<span class="string">&#x27;w&#x27;</span>)y=<span class="number">2</span>*y;</span><br><span class="line">            <span class="keyword">else</span> y=<span class="number">2</span>*y+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(x!=(y^<span class="number">1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                adj[x].push_back(y^<span class="number">1</span>);</span><br><span class="line">                adj[y].push_back(x^<span class="number">1</span>);</span><br><span class="line">                radj[y^<span class="number">1</span>].push_back(x);</span><br><span class="line">                radj[x^<span class="number">1</span>].push_back(y);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        adj[<span class="number">0</span>].push_back(<span class="number">1</span>);</span><br><span class="line">        radj[<span class="number">1</span>].push_back(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//加一条新娘到新郎的边。</span></span><br><span class="line">        <span class="comment">//表示选了新娘必选新郎，这样如果选了新娘就会判断无解。</span></span><br><span class="line">        <span class="comment">//这样选出来的组合必定是有新郎的，即和新郎坐在同一侧的</span></span><br><span class="line">        korasaju();</span><br><span class="line">        <span class="keyword">if</span>(!solvable())<span class="built_in">printf</span>(<span class="string">&quot;bad luck\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            dag.assign(cnt+<span class="number">1</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">            <span class="built_in">memset</span>(ind,<span class="number">0</span>,<span class="keyword">sizeof</span>(ind));</span><br><span class="line">            <span class="built_in">memset</span>(color,<span class="number">0</span>,<span class="keyword">sizeof</span>(color));</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                len=adj[i].size();</span><br><span class="line">                <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;len;j++)</span><br><span class="line">                  <span class="keyword">if</span>(id[i]!=id[adj[i][j]])</span><br><span class="line">                  &#123;</span><br><span class="line">                      dag[id[adj[i][j]]].push_back(id[i]);</span><br><span class="line">                      ind[id[i]]++;</span><br><span class="line">                  &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">              <span class="keyword">if</span>(ind[i]==<span class="number">0</span>)</span><br><span class="line">                 q1.push(i);</span><br><span class="line">            topsort();</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)<span class="comment">//小心别写错，是color[id[</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(color[id[<span class="number">2</span>*i]]==<span class="string">&#x27;R&#x27;</span>)<span class="built_in">printf</span>(<span class="string">&quot;%dh&quot;</span>,i);<span class="comment">//选取的是和新郎同一侧的，输出和新娘同一侧的</span></span><br><span class="line">                                             <span class="comment">//所以输出的时候h和w换一下</span></span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%dw&quot;</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
